#---------------------------
# check status
#---------------------------
- name: is running unicorn
  shell:  |
    ps aux | grep unicorn | grep -v grep
  register: is_running_unicorn
  changed_when: False
  ignore_errors: yes

- name: is running nginx
  shell:  |
    ps aux | grep nginx | grep -v grep
  register: is_running_nginx
  changed_when: False
  ignore_errors: yes

#---------------------------
# provide setting files
#---------------------------
- name: provide database.yml
  template:
    src: roles/setup_server/templete/database.yml.j2
    dest: /var/www/rails_app/config/database.yml
    owner: ec2-user
    group: ec2-user
    mode: 0664

- name: provide unicorn.rb
  template:
    src: roles/setup_server/templete/unicorn.rb.j2
    dest: /var/www/rails_app/config/unicorn.rb
    owner: ec2-user
    group: ec2-user
    mode: 0664

- name: provide unicorn.rake
  template:
    src: roles/setup_server/templete/unicorn.rake.j2
    dest: /var/www/rails_app/lib/tasks/unicorn.rake
    owner: ec2-user
    group: ec2-user
    mode: 0664

- name: create dir for unicorn.sock
  file:
    path: /var/www/rails_app/tmp/sockets
    state: directory
    owner: ec2-user
    group: ec2-user
    mode: 0775

- name: provide rails.conf
  template:
    src: roles/setup_server/templete/rails.conf.j2
    dest: /etc/nginx/conf.d/rails.conf
    owner: root
    group: root
    mode: 0775
  notify: 
    - restart nginx
  become: yes

#---------------------------
# start services
#---------------------------
- name: start unicorn
  shell: bash -lc "rake unicorn:start"
  # shell: |
  #   ~/.rbenv/shims/rake unicorn:start
  args:
    chdir: /var/www/rails_app
  when: is_running_unicorn is failed

- name: start nginx
  service:
    name: nginx
    state: started
  become: yes
  when: is_running_nginx is failed